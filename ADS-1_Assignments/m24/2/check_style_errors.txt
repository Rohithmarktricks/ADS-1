Starting audit...
[ERROR] /home/rohith/Documents/ADS-1/ADS-1_Assignments/m24/2/BinarySearchTree.java:0: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /home/rohith/Documents/ADS-1/ADS-1_Assignments/m24/2/BinarySearchTree.java:21:8: Unused @param tag for 'a'. [JavadocMethod]
[ERROR] /home/rohith/Documents/ADS-1/ADS-1_Assignments/m24/2/BinarySearchTree.java:22:8: Unused @param tag for 'p'. [JavadocMethod]
[ERROR] /home/rohith/Documents/ADS-1/ADS-1_Assignments/m24/2/BinarySearchTree.java:24:29: Expected @param tag for 'r'. [JavadocMethod]
[ERROR] /home/rohith/Documents/ADS-1/ADS-1_Assignments/m24/2/BinarySearchTree.java:24:61: Expected @param tag for 't'. [JavadocMethod]
[ERROR] /home/rohith/Documents/ADS-1/ADS-1_Assignments/m24/2/BinarySearchTree.java:173:5: Class 'BinarySearchTree' looks like designed for extension (can be subclassed), but the method 'getBE' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BinarySearchTree' final or making the method 'getBE' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/rohith/Documents/ADS-1/ADS-1_Assignments/m24/2/BinarySearchTree.java:173:5: Missing a Javadoc comment. [JavadocMethod]
[ERROR] /home/rohith/Documents/ADS-1/ADS-1_Assignments/m24/2/BinarySearchTree.java:176:5: Class 'BinarySearchTree' looks like designed for extension (can be subclassed), but the method 'getLE' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BinarySearchTree' final or making the method 'getLE' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/rohith/Documents/ADS-1/ADS-1_Assignments/m24/2/BinarySearchTree.java:176:5: Missing a Javadoc comment. [JavadocMethod]
[ERROR] /home/rohith/Documents/ADS-1/ADS-1_Assignments/m24/2/BinarySearchTree.java:179:5: Class 'BinarySearchTree' looks like designed for extension (can be subclassed), but the method 'findMax' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BinarySearchTree' final or making the method 'findMax' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/rohith/Documents/ADS-1/ADS-1_Assignments/m24/2/BinarySearchTree.java:179:5: Missing a Javadoc comment. [JavadocMethod]
[ERROR] /home/rohith/Documents/ADS-1/ADS-1_Assignments/m24/2/BinarySearchTree.java:180: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/rohith/Documents/ADS-1/ADS-1_Assignments/m24/2/BinarySearchTree.java:187: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/rohith/Documents/ADS-1/ADS-1_Assignments/m24/2/BinarySearchTree.java:189: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/rohith/Documents/ADS-1/ADS-1_Assignments/m24/2/BinarySearchTree.java:193:5: Class 'BinarySearchTree' looks like designed for extension (can be subclassed), but the method 'getGE' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BinarySearchTree' final or making the method 'getGE' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/rohith/Documents/ADS-1/ADS-1_Assignments/m24/2/BinarySearchTree.java:193:5: Missing a Javadoc comment. [JavadocMethod]
Audit done.
Checkstyle ends with 16 errors.
